applications:
  backend:
    type: python:3.11
    source:
      root: backend
    build:
      flavor: none
    web:
      commands:
        start: gunicorn --bind 0.0.0.0:$PORT --workers 3 config.wsgi:application
      upstream:
        socket_family: tcp
        protocol: http
    variables:
      env:
        DJANGO_SETTINGS_MODULE: config.settings
        PYTHONPATH: /app/backend
        DJANGO_DEBUG: false
        DJANGO_ALLOWED_HOSTS: "*"
    relationships:
      database: postgresql:postgresql
    hooks:
      build: |
        pip install -r requirements.txt
        python manage.py collectstatic --noinput
      deploy: |
        python manage.py migrate --noinput
        python manage.py force_load_demo_data

  frontend:
    type: nodejs:18
    source:
      root: frontend
    build:
      flavor: none
    web:
      commands:
        start: serve -s dist -l $PORT
    variables:
      env:
        NODE_ENV: production
    hooks:
      build: |
        npm install
        npm run build

services:
  postgresql:
    type: postgresql:15
    configuration:
      extensions:
        - uuid-ossp
        - pg_trgm
        - unaccent

routes:
  "https://{default}/":
    type: upstream
    upstream: "frontend:http"
  "https://{default}/api/":
    type: upstream
    upstream: "backend:http"
    cache:
      enabled: false
  "https://{default}/admin/":
    type: upstream
    upstream: "backend:http"
  "https://{default}/static/":
    type: upstream
    upstream: "backend:http"